{"ast":null,"code":"export const validate = inputs => {\n  const errores = {};\n  const array = Object.values(errores);\n  const regexEmail = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i;\n  if (!regexEmail.test(inputs.email)) {\n    errores.email = 'Debe ser un correo electrónico';\n  } else if (inputs.email === \"\") {\n    errores.email = 'El Correo es Obligatorio';\n  } else if (inputs.email.length > 35) {\n    errores.email = 'Tiene que tener menos de 35 caracteres';\n  }\n  if (!inputs.password) {\n    errores.password = 'La contraseña no puede estar vacía';\n  } else if (!/\\d/.test(inputs.password)) {\n    errores.password = 'La contraseña debe contener al menos un número';\n  } else if (inputs.password.length < 6 || inputs.password.length > 10) {\n    errores.password = 'La contraseña debe tener entre 6 y 10 caracteres';\n  }\n  return errores;\n};","map":{"version":3,"names":["validate","inputs","errores","array","Object","values","regexEmail","test","email","length","password"],"sources":["C:/Users/Nico/Desktop/RickAndMorty/rick_and_morty/Client/src/components/validantion.js"],"sourcesContent":["export const validate = (inputs) =>{\r\n    const errores = {}\r\n    const array = Object.values(errores)\r\n    const regexEmail = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i;\r\n    if (!regexEmail.test(inputs.email)) {\r\n        errores.email = 'Debe ser un correo electrónico';\r\n     }\r\n     else if(inputs.email === \"\"){\r\n        errores.email = 'El Correo es Obligatorio'\r\n     }\r\n     else if(inputs.email.length> 35){\r\n        errores.email = 'Tiene que tener menos de 35 caracteres'\r\n     }\r\n     if (!inputs.password) {\r\n      errores.password = 'La contraseña no puede estar vacía';\r\n    } else if (!/\\d/.test(inputs.password)) {\r\n      errores.password = 'La contraseña debe contener al menos un número';\r\n    } else if (inputs.password.length < 6 || inputs.password.length > 10) {\r\n      errores.password = 'La contraseña debe tener entre 6 y 10 caracteres';\r\n    }\r\n     return errores\r\n}"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAIC,MAAM,IAAI;EAC/B,MAAMC,OAAO,GAAG,CAAC,CAAC;EAClB,MAAMC,KAAK,GAAGC,MAAM,CAACC,MAAM,CAACH,OAAO,CAAC;EACpC,MAAMI,UAAU,GAAG,2CAA2C;EAC9D,IAAI,CAACA,UAAU,CAACC,IAAI,CAACN,MAAM,CAACO,KAAK,CAAC,EAAE;IAChCN,OAAO,CAACM,KAAK,GAAG,gCAAgC;EACnD,CAAC,MACI,IAAGP,MAAM,CAACO,KAAK,KAAK,EAAE,EAAC;IACzBN,OAAO,CAACM,KAAK,GAAG,0BAA0B;EAC7C,CAAC,MACI,IAAGP,MAAM,CAACO,KAAK,CAACC,MAAM,GAAE,EAAE,EAAC;IAC7BP,OAAO,CAACM,KAAK,GAAG,wCAAwC;EAC3D;EACA,IAAI,CAACP,MAAM,CAACS,QAAQ,EAAE;IACrBR,OAAO,CAACQ,QAAQ,GAAG,oCAAoC;EACzD,CAAC,MAAM,IAAI,CAAC,IAAI,CAACH,IAAI,CAACN,MAAM,CAACS,QAAQ,CAAC,EAAE;IACtCR,OAAO,CAACQ,QAAQ,GAAG,gDAAgD;EACrE,CAAC,MAAM,IAAIT,MAAM,CAACS,QAAQ,CAACD,MAAM,GAAG,CAAC,IAAIR,MAAM,CAACS,QAAQ,CAACD,MAAM,GAAG,EAAE,EAAE;IACpEP,OAAO,CAACQ,QAAQ,GAAG,kDAAkD;EACvE;EACC,OAAOR,OAAO;AACnB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}